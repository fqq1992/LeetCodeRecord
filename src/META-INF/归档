鲸鱼小班：
    整体架构介绍；
    引入组件化的话题：Arouter/LiveData消息组建，接着讲怎么实现 优缺点 EventBus

    Rxjava的常用操作符；
    线程怎么到主线程；
    多线程，通信；

    List collection 主要方法；
    常见的实现List、Map、Set； ArrayList LinkList HashCode底层实现。
    equal 方法、HashCode关系，== 比的是地址。 hashCode的底层实现；





梧桐车联：
    AIDL, Client A conn Server B 的时候  A是 什么状态；返回bindle后 Server B 运行在什么线程里。
    怎么实现 A/B 两个异步接口合并数据的问题。
        rx merger. 手动实现，锁。或者用下述常见类。kotlin：measureTimeMillis

    线程常见工具类：
        CountDownLatch 齐射，等待多线程执行完后，执行自己。
        CyclicBarrier 屏障，传入参数N，等带N个线程阻塞后执行后续。可以传runnable优先执行。
        Semaphore 信号量， 同时支持N个线程并发共享资源。

    自定义View 图形混合。 setXfermode的 相关参数。 重叠部分的处理。

    多进程的优劣。


贵阳语聊：
    数组实现队列。
        参数表示起始下标 终止下标， 一定容量外的 抛异常。
    通用的文件下载框架。
        入口，URL、fileName、监听。
        下载引擎，判断本地是否存在、线程池加载，通过临时命名法解决异常情况下的文件问题，http content-Length校验文件是否完整。
        本地IO.


镁佳科技：
    3轮技术面均有手写算法之类。排序简单过一圈。
    除开常见问题：优化的问题点可以有， Linux进程 与 Android进程的区别。
    自定义ImageLoader框架。
        ImageLoader入口，
        ImageLoaderConfiguration通用配置：线程池/緩存大小/磁盤大小/日志
        DisplayImageOptions：单个图片的错误图 默认图等。

        上述对外接口。
        下面是流程。
        ImageLoader 入口
            ↓
        ImageEngine:分发任务到对应队列，
            ↓
        Cache  or Loader:获取具体数据 -->getData 区分 内存、磁盘、网络。
            ↓
        ImageDecoder：返回对应bitmap



雪球：
    Hr+三轮技术面.很奇怪的是第一轮是HR？之后等大概十几分钟后有人来，
    一面 主要是课程基础，数据接口 计算机网络之类的，Java线程安全/简历框架源码等；算法题，平衡树镜面。 思路 树的递归遍历 交换左右子节点。
    二面 主要是多线程 线程并发类；待优化的点 AQS　CAS等（PS:CAS本质是自旋锁或者说是乐观锁，AQS是独占锁的核心。）算法 字符串的处理。
    三面 应该是项目VP。主要是项目介绍以及工作内容的交换，设计模式以及算法题；
    再之后，VP让等HR 大约等十几分钟后有人要占用同一个会议室开会。
    教训：HR可能决定不了要你，但是HR可以决定不要谁。 呵



2019年11月14日 计划面试第四周，
    今日三家，心好累；跑断腿。

区块节点
    笔试3页纸，但好似没人看。
    一面 开始就比较奇怪。没有具体点 基本就是你熟悉什么设计模式 讲讲应用；你熟悉什么算法 讲讲使用场景；还有更什么的 你有没有什么技术改变生活的 自己的小项目或者小啥啥的
         开源的东西(神尼玛技术改变生活，只想说句艹。)。以及其他一些类似的东西；
    二面 相对具体一些 MVP/MVVM区别这类的，基本答完。还提醒入职申请表补充完整；再面完 接着是等人事。届时接近12点 十几分钟后 开始面人力。

    三面 人力资源 常规问题 离职原因，是否接受加班，996考核制(总计绩效3000)；KPI+工时 综合考量。
感觉人事面的细碎 很烦躁。出门12点半，奔赴下局。下午2点。路上就开始感觉 很无力，不知道在挣扎什么，在折腾什么；也许你
费劲巴拉的准备，绞尽脑汁的回答。也许在人那块只是趁机休息的机会。

必要商城
    首要印象 前台在一边边；登记 无笔试。邀约人很多 等待的几分钟时间里  已经见到5个人来等待参加面试。 后续一面得到消息 说是新融到一大笔钱 呵

    一面 问题：1、gradle的生命周期 、gradle在 编译APK的执行流程。
               2、网络这块 三次连接 四次挥手。怎么优化三次连接成为2次。
                  DNS怎么统计解析耗时.（Okhttp有暴露DNS解析接口，UrlConn反射）
               3、三方库原理层面，
                    Glide原理。
                    Lifecycle原理：LifecycleRegistry实现类。之后采用类似Glide的办法。具体参见 ReportFragment。在里面更新生命周期状态。
                    记忆深刻的点 “OKHTTP有什么缺点”神他么缺点，后面我反问；他说自己也不知道有啥缺点。
               4、设计模式 设计模式应用场景。而且简单的不要。
               5、上来就问有没有优化过ListView。(默默吐槽一句现在不都用recycleView了么：listView只有View创建、ViewHolder的使用。)
                  接着让讲RecycleView的优化。其实正常使用本身没啥槽点，不然早让官方优化掉了。主要是不同业务下 最好使用合理的配置。
                  甚至我怀疑面我的哥们现在写列表还用listView。。。

    二面 是技术经理。首先有明确我面试结果。一面过。然后给我吹了一波团队 985 211 之类的人挺多 基本都是4年工作经验以及以上巴拉巴拉的
                1、第一个正式问的问题是 高考考了多少分。当年一本线多少分。(这是要干嘛)
                2、面向对象了解么(嗯 了解的)
                   那讲讲 重写 重载的区别。（重写是继承 自己实现方法。重载是同一个方法名，参数类型不同或者参数个数不同）
                   那讲讲 为什么重载不可以判断返回参数不同。（编译不过啊，编译机不能根据返回值推断）
                   接着追问 编译原理你们学过么。（学过啊，然后呢，这还得扯到编译原理嘛。这我不知道怎么答了）
                3、接下来是哪些方法不能被重写。 (一共四种 private default protect public，前两种 不能被重写，后两种能被重写)
                   接着问 那还有什么不能被重写的么。 （final 修饰的类。）还有么，卒。

                4、为什么重写 权限修饰符 只能扩大 能缩小么(不能；因为多态调用需要这样使用)

                5、算法题 反转字符串。（逆向遍历 append到stringBuilder）

至此结束。之后是对我的总结性发言 代码写的挺规范 挺细节(因为给StringBuilder设置了初始容量) 单又说感觉最近出来面试 准备不是特别充分啊之类的。 接着是跟他们职位匹配度有但也有差异的部分。再比对比对。
呵，这他么招个一线工作人员，工作好几年了的兄弟 还得看高考分数？ 还得把编译原理 计算机网络 数据结构 操作系统 课程全过一遍么？


掌阅
    有笔试，很细节；细节到需要你写具体方法名的。比如http断点续传需要什么参数。 手写 downLoad图片 一直到保存文件名 全流程。

    1、简介过程中介绍 MVVM 、插件化。
    2、View绘制流程。
    接着是具体的问题。
        1、空Act rootView 是 frameLayout 全屏。在内部 View （match，wrap）这时候 View的高度是多少。讲讲measure的过程。
            哇 我垮跨一顿扯 结果没点到核心点 measureSpec.
        2、自定义一个ViewGroup实现，20Dp的View 点击后；做动画滑动展开成 20dp+100Dp的目标View。
            （方案很多，简单讲了3个。1悬浮 不用撑开布局的话 直接执行属性动画2、撑开布局的话 修改父布局高度(父布局是相对或者frame)。）
           问题打补丁了，父布局LearnLayout的话要让下面的View实现 自我滑动收缩的效果 怎么做。（onLayout）
           还有别的么，（抱歉没想到）
           可以通过修改View的padding 左上右下，之类的都能做。（。。。不是能不能 是猛的思路不会这么拐弯 他知道能是因为笔试上有类似的题。哪些方法可以使得View移动。）
        2、插入 自定义View的坐标系。
           怎么改变坐标系原点。（坐标变换）
        3、HandlerThread 跟Thread的区别。基本过。
           注意构造参数。 HandlerThread（"name"） Handler(Looper looper)

        4、设计模式。自选 简单的不要 后指明要builder模式。
           Glide 是否是责任链设计模式。
        5、HashMap源码。

这场感受，太抠细节了。 不仅得会用，还得点到细节原理点才行。甚至要细节到大概方法名。


一整天走下来，总结就是横看成岭侧成峰。什么样的问题都有 不一而足。 总归是细节点掌控不够。需要加强。









